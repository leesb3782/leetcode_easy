// 412. Fizz Buzz
// https://leetcode.com/problems/fizz-buzz
/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */
char** fizzBuzz(int n, int* returnSize) {
    char ** answerWords = (char **)malloc(n*sizeof(char *));
    memset(answerWords, 0, n*sizeof(char *));
    
    int i;

    for(i=2;i<n;i+=3) {
        answerWords[i] = (char *)malloc(11*sizeof(char));
        memset(answerWords[i], 0, 11*sizeof(char));
        snprintf(answerWords[i], 11, "Fizz");
        //printf("answerWords[%d] %s\n", i, answerWords[i]);
    }
    
    for(i=4;i<n;i+=5) {
        if(answerWords[i]==NULL) {
            answerWords[i] = (char *)malloc(11*sizeof(char));
            memset(answerWords[i], 0, 11*sizeof(char));
            snprintf(answerWords[i], 11, "Buzz");
            //printf("answerWords[%d] %s\n", i, answerWords[i]);
        } else {
            strcat(answerWords[i], "Buzz");
        }
    }
    
    for(i=0;i<n;i++) {
        if(answerWords[i]==NULL) {
            answerWords[i] = (char *)malloc(11*sizeof(char));
            memset(answerWords[i], 0, 11*sizeof(char));
            snprintf(answerWords[i], 11, "%d", i+1);
            //printf("answerWords[%d] %s\n", i, answerWords[i]);
        }
    }
    
    *returnSize = n;
    return answerWords;
}
