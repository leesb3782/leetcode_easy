// 438. Find All Anagrams in a String
// https://leetcode.com/problems/find-all-anagrams-in-a-string
/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* findAnagrams(char* s, char* p, int* returnSize) {
    int len_s = strlen(s);
    int len_p = strlen(p);
    int *answer;
    int i,j,letters[26] = {0};
    *returnSize = 0;
    if(len_s < len_p)
        return NULL;
    
    answer = (int *)malloc(len_s * sizeof(int));
    
    for(i=0;i<len_p;i++) {
        letters[p[i]-'a']++;
        letters[s[i]-'a']--;
    }
    
    for(i=0;i<=len_s-len_p;i++) {
        for(j=0;j<26;j++) {
            if(letters[j]!=0)
                break;
        }
        if(j==26) {
            answer[*returnSize] = i;
            (*returnSize)++;
        }
        if( i+len_p < len_s) {
            letters[s[i]-'a']++; // 因為一開始的時候就減掉了, 所以加回來.
            letters[s[i+len_p]-'a']--;
        }
    }
    
    return answer;
}
