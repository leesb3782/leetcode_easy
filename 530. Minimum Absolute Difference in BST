// 530. Minimum Absolute Difference in BST
// https://leetcode.com/problems/minimum-absolute-difference-in-bst
#include <algorithm>

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector <int> temp;
    void BinaryTreeTravel(TreeNode* node) {
        if(node == NULL)
            return;
        temp.push_back(node->val);
        BinaryTreeTravel(node->left);
        BinaryTreeTravel(node->right);
    }
    int getMinimumDifference(TreeNode* root) {
        int i,min_diff,diff;
        BinaryTreeTravel(root);
        sort(temp.begin(),temp.end());
        min_diff = temp[1] - temp[0];
        for(i=2;i<temp.size();i++) {
            diff = temp[i] - temp[i-1];
            min_diff = min_diff < diff ? min_diff : diff;
            if(min_diff == 0)
                break;
        }
        return min_diff;
    }
};
